apiVersion: apps/v1
kind: StatefulSet
metadata:
    labels:
        app: grafana
    name: grafana-deployment
    namespace: monitoring
spec:
    replicas: 1
    serviceName: "grafana-service"
    selector:
        matchLabels:
            app: grafana
    template:
        metadata:
            labels:
                app: grafana
        spec:
            containers:
            - image: grafana/grafana:8.5.2
              imagePullPolicy: IfNotPresent
              name: grafana
              volumeMounts:
                - name: grafana-volume
                  mountPath: /var/lib/grafana
              ports:
                - containerPort: 3000
              env:
                - name: GF_INSTALL_PLUGINS
                  value: "alexanderzobnin-zabbix-app"
            volumes:
              - name: grafana-volume
                persistentVolumeClaim:
                  claimName: grafana-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: rook-ceph-block
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
spec:
  ports:
    -
      port: 3000
      name: http
      protocol: TCP
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: "grafana.${SECRET_LOCAL_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana-service
                port:
                  number: 3000

