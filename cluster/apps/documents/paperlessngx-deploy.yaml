apiVersion: apps/v1
kind: StatefulSet
metadata:
    labels:
        app: paperless
    name: paperless-deployment
    namespace: documents
spec:
    replicas: 1
    serviceName: "paperless-service"
    selector:
        matchLabels:
            app: paperless
    template:
        metadata:
            labels:
                app: paperless
        spec:
            containers:
            - image: redis:7.0.0
              imagePullPolicy: IfNotPresent
              name: paperless-redis
              ports:
                - name: redis
                  containerPort: 6379
              livenessProbe:
               tcpSocket:
                port: redis
            - image: ghcr.io/paperless-ngx/paperless-ngx:1.13
              imagePullPolicy: IfNotPresent
              name: paperless
              volumeMounts:
                - name: paperless-data-volume
                  mountPath: /usr/src/paperless/data
                - name: paperless-media-volume
                  mountPath: /usr/src/paperless/media
                - name: paperless-export-volume
                  mountPath: /usr/src/paperless/export
                - name: paperless-consume-volume
                  mountPath: /usr/src/paperless/consume
              ports:
                - containerPort: 8000
              env:
                - name: USERMAP_UID
                  value: "1000"
                - name: USERMAP_GID 
                  value: "1000"
                - name: PAPERLESS_TIME_ZONE
                  value: "${CONFIG_TIMEZONE}"
                - name: PAPERLESS_OCR_LANGUAGES
                  value: "nld eng"
                - name: PAPERLESS_OCR_LANGUAGE
                  value: "nld"
                - name: PAPERLESS_SECRET_KEY
                  value: "${SECRET_PAPERLESS_SECRET_KEY}"
                - name: PAPERLESS_REDIS
                  value: "redis://paperless-redis-service:6379"
            volumes:
              - name: paperless-data-volume
                persistentVolumeClaim:
                  claimName: paperless-data-data
              - name: paperless-media-volume
                persistentVolumeClaim:
                  claimName: paperless-media-data
              - name: paperless-export-volume
                persistentVolumeClaim:
                  claimName: paperless-export-data
              - name: paperless-consume-volume
                persistentVolumeClaim:
                  claimName: paperless-consume-data
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-service
  namespace: documents
spec:
  ports:
    -
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: paperless
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-redis-service
  namespace: documents
spec:
  ports:
    -
      port: 6379
  selector:
    app: paperless-redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-media-data
  namespace: documents
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: rook-ceph-block
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-export-data
  namespace: documents
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: rook-ceph-block
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-data-data
  namespace: documents
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: rook-ceph-block
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-consume-data
  namespace: documents
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: rook-ceph-block
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ingress
  namespace: documents
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "paperless.${SECRET_LOCAL_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: paperless-service
                port:
                  number: 8000